{
    "stkh_req_directive": {
    "prefix": "stkh_req_t",
    "body": [
        ".. sthk_req:: $1",
        "   :id: STHK_REQ__$RANDOM_HEX${RANDOM_HEX/([a-zA-z0-9}]{2,2})(.*)/$1/} $2",
        "   :reqtype: ${3|Functional, Interface, Process, Legal, Non-Functional|}",
        "   :security: ${4|YES,NO|}",
        "   :safety: ${5|QM, ASIL_B, ASIL_D|}",
        "   :rationale: $6",
        "   :status: ${7|valid,invalid|}\n",
        "   $8" ],
    "description": "Generate an stakeholder directive need with all needed option types",
    },
    "feat_req_directive":
    { "prefix": "feat_req_t",
        "body": [ ".. feat_req:: $1",
        "   :id: FEAT_REQ__$RANDOM_HEX${RANDOM_HEX/([a-zA-z0-9}]{2,2})(.*)/$1/} $2",
        "   :reqtype: ${3|Functional, Interface, Process, Legal, Non-Functional|}",
        "   :security: ${4|YES,NO|}",
        "   :safety: ${5|QM, ASIL_B, ASIL_D|}",
        "   :satisfies: STHK_REQ__$6",
        "   :status: ${7|valid,invalid|}\n",
        "   $8" ],
        "description": "Generate an feature directive need with all needed option types",
    },
    "comp_req_directive": { "prefix": "comp_req_t",
        "body": [ ".. comp_req:: $1",
        "   :id: COMP_REQ__$RANDOM_HEX${RANDOM_HEX/([a-zA-z0-9}]{2,2})(.*)/$1/} $2",
        "   :reqtype: ${3|Functional, Interface, Process, Legal, Non-Functional|}",
        "   :security: ${4|YES,NO|}",
        "   :safety: ${5|QM, ASIL_B, ASIL_D|}",
        "   :satisfies: FEAT_REQ__$6",
        "   :status: ${7|valid,invalid|}\n",
            "   $8" ],
        "description": "Generate an component requirement directive need with all needed option types",
    },
    "tool_req_directive": { "prefix": "tool_req_t",
    "body": [ ".. tool_req:: $1",
        "   :id: TOOL_REQ__$RANDOM_HEX${RANDOM_HEX/([a-zA-z0-9}]{2,2})(.*)/$1/} $2",
        "   :reqtype: ${3|Functional, Interface, Process, Legal, Non-Functional|}",
        "   :security: ${4|YES,NO|}",
        "   :safety: ${5|QM, ASIL_B, ASIL_D|}",
        "   :satisfies: GD__$6",
        "   :status: ${7|valid,invalid|}\n",
        "   $8" ],
        "description": "Generate an tool requirement directive need with all needed option types",
    },
    "aou_directive": { "prefix": "aou_t",
    "body": [ ".. aou:: $1",
        "   :id: AOU_REQ__$RANDOM_HEX${RANDOM_HEX/([a-zA-z0-9}]{2,2})(.*)/$1/} $2",
        "   :reqtype: ${3|Functional, Interface, Process, Legal, Non-Functional|}",
        "   :security: ${4|YES,NO|}",
        "   :safety: ${5|ASIL_B, ASIL_D|}",
        "   :satisfies: $6",
        "   :status: ${7|valid,invalid|}\n",
        "   $8" ],
        "description": "Generate an AoU directive need with all needed option types",
    },
    "feat_arc_directive":
    { "prefix": "feat_arc_t",
        "body": [ ".. feat_arc::",
            "   :id: $1",
            "   :satisfies: $2",
            "   :status: $3\n",
            "   $4" ],
        "description": "Generate an feature directive need with all needed option types",
    },
    "comp_arc_directive": { "prefix": "comp_arc_t",
        "body": [ ".. comp_arc::",
            "   :id: $1",
            "   :satisfies: $2",
            "   :status: $3\n",
            "   $4" ],
        "description": "Generate an component directive need with all needed option types",
    },
}
